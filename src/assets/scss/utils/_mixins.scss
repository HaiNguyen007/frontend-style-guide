@mixin breakpoint-retina() {
    /* stylelint-disable */
    @media #{$screen} and (-webkit-min-device-pixel-ratio: 2),
        #{$screen} and (-o-min-device-pixel-ratio: 2/1),
        #{$screen} and (min--moz-device-pixel-ratio: 2),
        #{$screen} and (min-device-pixel-ratio: 2),
        #{$screen} and (min-resolution: 192dpi),
        #{$screen} and (min-resolution: 2dppx) {
        @content;
    }
    /* stylelint-enable */
}

@mixin breakpoint-max($range) {
    @media #{$screen} and (max-width: #{(nth($range, 1) - 1px)}) {
        @content;
    }
}

@mixin breakpoint($range, $orientation: '', $only: false) {
    @if $orientation != '' {
        $orientation: "and (orientation: #{$orientation})";
    }

    /* stylelint-disable */
    @if $only == true {
        @media #{$screen} and (min-width: #{nth($range, 1)}) and (max-width: #{nth($range, 2)}) #{$orientation} {
            @content;
        }
    }

    @else {
        @media #{$screen} and (min-width: #{nth($range, 1)}) #{$orientation} {
            @content;
        }
    }
    /* stylelint-enable */
}

@mixin fluid-type($min-font-size, $max-font-size, $min-vw: 480px, $max-vw: 1200px) {
    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);

    @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
        font-size: get-rems($min-font-size);

        @if $min-vw != $max-vw {
            @media only screen and (min-width: $min-vw) {
                font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
            }
        }

        @media only screen and (min-width: $max-vw) {
            font-size: get-rems($max-font-size, true);
        }
    }
    @else {
         @error"Detected mixed units. Please use the same units for all parameters.";
    }
}
